<?xml version="1.0"?>

<launch>
  <!-- send urdf to param server
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find schunk_lwa4p_control)/urdf/lwa4p.urdf.xacro'" /> -->
        
  <!-- robot state publisher
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher"/> -->

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file    = "$(find vigir_robotiq_ros_control)/config/l_robotiq_states_controller.yaml" 
            command = "load"/>
  <rosparam file    = "$(find vigir_robotiq_ros_control)/config/l_robotiq_position_controller.yaml"
            command = "load"/>            
  <rosparam file    = "$(find vigir_robotiq_ros_control)/config/l_robotiq_effort_controller.yaml"
            command = "load"/>            
  <rosparam file    = "$(find vigir_robotiq_ros_control)/config/l_robotiq_velocity_controller.yaml"
            command = "load"/>
  <rosparam file    = "$(find vigir_robotiq_ros_control)/config/l_robotiq_joint_limits.yaml"
            command = "load"/>
            
  <rosparam ns      = "left_robotiq"
            file    = "$(find vigir_robotiq_ros_control)/config/l_robotiq_position_trajectory_controller.yaml"
            command = "load"/>
            
  <node name    = "rosparam_append_node" 
        pkg     = "flor_atlas_moveit_config"
        type    = "rosparam_append"
        args    = "$(find vigir_robotiq_ros_control)/config/l_robotiq_controllers.yaml /move_group/controller_list"/>

  <node name    = "left_robotiq_position_trajectory_controller"
        pkg     = "controller_manager"
        type    = "spawner"
        ns      = "left_robotiq"
        output  = "screen"
        args    = "left_hand_traj_controller"/>

            
  <!-- load the controllers -->
  <node name    = "left_robotiq_state_controller_spawner"
        pkg     = "controller_manager"
        type    = "spawner" 
        respawn = "false" 
        ns      = "left_robotiq" 
        output  = "screen"  
        args    = "joint_state_controller"/>  
        
  <node name    = "left_robotiq_postition_controller_spawner" 
        pkg     = "controller_manager" 
        type    = "spawner" 
        respawn = "false" 
        ns      = "left_robotiq" 
        output  = "screen" 
        args    = "--stopped
                   left_f0_j1_position_controller
                   left_f1_j1_position_controller
                   left_f2_j1_position_controller
                   left_f1_j0_position_controller
                   left_f2_j0_position_controller
                   left_f0_j2_position_controller
                   left_f1_j2_position_controller
                   left_f2_j2_position_controller
                   left_f0_j3_position_controller
                   left_f1_j3_position_controller
                   left_f2_j3_position_controller "/>  
                   
  <node name    = "left_robotiq_effort_controller_spawner" 
        pkg     = "controller_manager" 
        type    = "spawner" 
        respawn = "false" 
        ns      = "left_robotiq" 
        output  = "screen" 
        args    = "--stopped
                   left_f0_j1_effort_controller
                   left_f1_j1_effort_controller
                   left_f2_j1_effort_controller
                   left_f1_j0_effort_controller
                   left_f2_j0_effort_controller
                   left_f0_j2_effort_controller
                   left_f1_j2_effort_controller
                   left_f2_j2_effort_controller
                   left_f0_j3_effort_controller
                   left_f1_j3_effort_controller
                   left_f2_j3_effort_controller "/>  
                   
  <node name    = "left_robotiq_velocity_controller_spawner" 
        pkg     = "controller_manager" 
        type    = "spawner" 
        respawn = "false" 
        ns      = "left_robotiq" 
        output  = "screen" 
        args    = "--stopped
                   left_f0_j1_velocity_controller
                   left_f1_j1_velocity_controller
                   left_f2_j1_velocity_controller
                   left_f1_j0_velocity_controller
                   left_f2_j0_velocity_controller
                   left_f0_j2_velocity_controller
                   left_f1_j2_velocity_controller
                   left_f2_j2_velocity_controller
                   left_f0_j3_velocity_controller
                   left_f1_j3_velocity_controller
                   left_f2_j3_velocity_controller "/>                                    
        

  <node name    = "left_robotiq_ros_controller" 
        pkg     = "vigir_robotiq_ros_control" 
        type    = "vigir_robotiq_ros_controller_node" 
        ns      = "left_robotiq"
        output  = "screen">
        <param name="hand_side" value="left" />
        <param name="hand_name" value="l_hand"/>
        <rosparam file    = "$(find vigir_robotiq_ros_control)/config/robotiq_joints.yaml" 
                  command = "load" />
  </node>
  
  <arg name="input_joints"  default="/left_robotiq/joint_states" />
  <arg name="output_joints" default="/joint_states" />
  
  <node name    = "left_robotiq_republisher" 
        pkg     = "topic_tools" 
        type    = "relay" 
        ns      = "left_robotiq"
        args    = "$(arg input_joints)
                   $(arg output_joints)">
  </node>
</launch>
